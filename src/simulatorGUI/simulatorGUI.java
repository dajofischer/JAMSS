/*
		JAMSS - MS simulator
    Copyright (C) 2014  Rob Smith 2robsmith@gmail.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package simulatorGUI;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ProgressMonitor;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author rob
 */
public class simulatorGUI extends javax.swing.JFrame {

	long cloneSeed;
	
    /** Creates new form simulatorGUI */
    public simulatorGUI() {
        initComponents();
		FileNameExtensionFilter fastaFilter = new FileNameExtensionFilter("Fasta files","fasta");
		openFastaFileChooser.setFileFilter(fastaFilter);
		FileNameExtensionFilter mzMLFilter = new FileNameExtensionFilter("mzML files","mzML");
		openOptsFileChooser.setFileFilter(mzMLFilter);
		
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public static ProgressMonitor progressMonitor;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openOptsFileChooser = new javax.swing.JFileChooser();
        openFastaFileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        textOptionsFilename = new javax.swing.JLabel();
        buttonOptionsOpen = new javax.swing.JButton();
        buttonRun = new javax.swing.JButton();
        textFastaFilename = new javax.swing.JLabel();
        buttonFastaOpen = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textOutputFile = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textTruthOutputFile = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        sliderCleavages = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        textMaxNoise = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        textMinNoise = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        textWhiteNoise = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        textDropout = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        textChromOverlapRange = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        comboDigester = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        textSamplingRate = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        textRuntime = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        textPH = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        sliderMS2PerScan = new javax.swing.JSlider();
        buttonRestoreDefaults = new javax.swing.JButton();
        checkboxCarbamidomethylationGain = new javax.swing.JCheckBox();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        spinnerPyroglutamateLossPercent = new javax.swing.JSpinner();
        spinnerPhosphorylationGainPercent = new javax.swing.JSpinner();
        spinnerOxidationMethioninePercent = new javax.swing.JSpinner();
        checkBoxOneD = new javax.swing.JCheckBox();
        jLabel37 = new javax.swing.JLabel();
        sliderNumCPUs = new javax.swing.JSlider();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cloneCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14));
        jLabel1.setText("IO Options:");

        textOptionsFilename.setText("none");
        textOptionsFilename.setMaximumSize(new java.awt.Dimension(64, 15));
        textOptionsFilename.setMinimumSize(new java.awt.Dimension(64, 15));
        textOptionsFilename.setPreferredSize(new java.awt.Dimension(64, 15));

        buttonOptionsOpen.setText("Open");
        buttonOptionsOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonOptionsOpenMouseClicked(evt);
            }
        });

        buttonRun.setText("Run");
        buttonRun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonRunMouseClicked(evt);
            }
        });

        textFastaFilename.setText("none");
        textFastaFilename.setMaximumSize(new java.awt.Dimension(64, 15));
        textFastaFilename.setMinimumSize(new java.awt.Dimension(64, 15));
        textFastaFilename.setPreferredSize(new java.awt.Dimension(64, 15));

        buttonFastaOpen.setText("Open");
        buttonFastaOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonFastaOpenMouseClicked(evt);
            }
        });

        jLabel2.setText("*mzML Output File:");

        textOutputFile.setText("output");
        textOutputFile.setMaximumSize(new java.awt.Dimension(64, 25));
        textOutputFile.setMinimumSize(new java.awt.Dimension(64, 25));
        textOutputFile.setPreferredSize(new java.awt.Dimension(64, 25));

        jLabel3.setText("*.fasta File:");

        jLabel4.setText("Load Options:");

        jLabel7.setText("Truth Output File:");

        textTruthOutputFile.setText("truth");
        textTruthOutputFile.setMaximumSize(new java.awt.Dimension(64, 25));
        textTruthOutputFile.setMinimumSize(new java.awt.Dimension(64, 25));
        textTruthOutputFile.setPreferredSize(new java.awt.Dimension(64, 25));

        jLabel9.setText("Missed Cleavages:");

        sliderCleavages.setMajorTickSpacing(1);
        sliderCleavages.setMaximum(5);
        sliderCleavages.setPaintLabels(true);
        sliderCleavages.setPaintTicks(true);
        sliderCleavages.setSnapToTicks(true);
        sliderCleavages.setToolTipText("");
        sliderCleavages.setValue(0);

        jLabel10.setText("Max Noise Intensity:");

        textMaxNoise.setText("1000");

        jLabel11.setText("Min Noise Intensity:");

        textMinNoise.setText("50");

        jLabel12.setText("White Noise Points Per Scan:");

        textWhiteNoise.setText("10");

        jLabel13.setText("Dropout Percentage (1-100):");

        textDropout.setText("1");

        jLabel15.setText("One Dimension Simulation?:");

        jLabel24.setText("Overlap Range:");

        textChromOverlapRange.setText("0.002");
        textChromOverlapRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textChromOverlapRangeActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel25.setText("Modifications:");

        jLabel27.setFont(new java.awt.Font("Dialog", 1, 14));
        jLabel27.setText("Mass Spec Options:");

        jLabel28.setText("Digester:");

        comboDigester.setModel(new javax.swing.DefaultComboBoxModel(DigesterOpts.getOptions()));

        jLabel29.setText("Scans Per Second:");

        textSamplingRate.setText("1");

        jLabel30.setText("Runtime (seconds):");

        textRuntime.setText("1000");

        jLabel31.setText("Sample pH:");

        textPH.setText("2.6");

        jLabel32.setText("MS2 Per Scan:");

        sliderMS2PerScan.setMajorTickSpacing(1);
        sliderMS2PerScan.setMaximum(10);
        sliderMS2PerScan.setPaintLabels(true);
        sliderMS2PerScan.setPaintTicks(true);
        sliderMS2PerScan.setSnapToTicks(true);
        sliderMS2PerScan.setToolTipText("");
        sliderMS2PerScan.setValue(0);

        buttonRestoreDefaults.setText("Restore Defaults");
        buttonRestoreDefaults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonRestoreDefaultsMouseClicked(evt);
            }
        });

        jLabel33.setText("Pyroglutamate Loss");

        jLabel34.setText("Phosphorylation Gain");

        jLabel36.setText("Oxidation of Methionine Gain");

        spinnerPyroglutamateLossPercent.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        spinnerPhosphorylationGainPercent.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        spinnerOxidationMethioninePercent.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        jLabel37.setText("Multithread: How many CPUs?");

        sliderNumCPUs.setMajorTickSpacing(1);
        sliderNumCPUs.setMaximum(Runtime.getRuntime().availableProcessors());
        sliderNumCPUs.setMinimum(1);
        sliderNumCPUs.setPaintLabels(true);
        sliderNumCPUs.setPaintTicks(true);

        jLabel8.setText("Carbamidomethylation gain");

        jLabel5.setToolTipText("");

        jLabel6.setText("Clone?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(30, 30, 30)
                                    .addComponent(textFastaFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(12, 12, 12)
                                    .addComponent(textOptionsFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel6)
                                .addComponent(jLabel25)
                                .addComponent(jLabel8)
                                .addComponent(jLabel33)
                                .addComponent(jLabel34)
                                .addComponent(jLabel36)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textTruthOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(247, 247, 247)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cloneCheckBox, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(spinnerPyroglutamateLossPercent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(checkboxCarbamidomethylationGain, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(spinnerOxidationMethioninePercent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buttonFastaOpen, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(spinnerPhosphorylationGainPercent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buttonOptionsOpen, javax.swing.GroupLayout.Alignment.TRAILING))))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel37))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textPH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textRuntime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sliderMS2PerScan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textDropout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textChromOverlapRange, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboDigester, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textSamplingRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textMinNoise, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textMaxNoise, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sliderCleavages, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textWhiteNoise, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sliderNumCPUs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkBoxOneD, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonRestoreDefaults)
                                .addGap(6, 6, 6)
                                .addComponent(buttonRun))))
                    .addComponent(jLabel1))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonFastaOpen)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(textFastaFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textTruthOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(textOptionsFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(buttonOptionsOpen)))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(cloneCheckBox)))
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(checkboxCarbamidomethylationGain)))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(spinnerPyroglutamateLossPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel34))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(spinnerPhosphorylationGainPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinnerOxidationMethioninePercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel36)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel37)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel28))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sliderNumCPUs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(comboDigester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel29))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(textSamplingRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel30))
                            .addComponent(textRuntime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel9))
                            .addComponent(sliderCleavages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel32))
                            .addComponent(sliderMS2PerScan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkBoxOneD, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textPH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textDropout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textWhiteNoise, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textMaxNoise, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textMinNoise, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textChromOverlapRange, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonRestoreDefaults)
                            .addComponent(buttonRun))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void buttonOptionsOpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonOptionsOpenMouseClicked
    int returnVal = openOptsFileChooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = openOptsFileChooser.getSelectedFile();
         textOptionsFilename.setText(file.getAbsolutePath());
    }
	
	// read mzML file and set the msOptions string (will be overridden if not clone)
	try{
	BufferedReader br = new BufferedReader(new FileReader(textOptionsFilename.getText()));
	String line;
	boolean gotOptions = false;
	while ((line = br.readLine()) != null) {
		if(line.contains("Simulated Options")){
			int startIdx = line.indexOf("value=") + 7;
			MassSpec.simOptions = line.substring(startIdx,line.indexOf(" ", startIdx)-1);
			String[] options = MassSpec.simOptions.split(",");
			textOutputFile.setText(options[0]);
			textTruthOutputFile.setText(options[1]);
			checkboxCarbamidomethylationGain.setSelected(Boolean.parseBoolean(options[2]));
			spinnerPyroglutamateLossPercent.setValue(Integer.parseInt(options[3]));
			spinnerPhosphorylationGainPercent.setValue(Integer.parseInt(options[4]));
			spinnerOxidationMethioninePercent.setValue(Integer.parseInt(options[5]));
			comboDigester.setSelectedIndex(Integer.parseInt(options[6]));
			textSamplingRate.setText(options[7]);
			textRuntime.setText(options[8]);
			sliderCleavages.setValue(Integer.parseInt(options[9]));
			sliderMS2PerScan.setValue(Integer.parseInt(options[10]));
			checkBoxOneD.setSelected(Boolean.parseBoolean(options[11]));
			textPH.setText(options[12]);
			textDropout.setText(options[13]);
			textWhiteNoise.setText(options[14]);
			textMaxNoise.setText(options[15]);
			textMinNoise.setText(options[16]);
			textChromOverlapRange.setText(options[17]);
			cloneCheckBox.setSelected(Boolean.parseBoolean(options[18]));
			cloneSeed = Long.parseLong(options[19]);
			gotOptions = true;
System.out.println(MassSpec.simOptions);
		}
	}
	br.close();
	if (!gotOptions){
		JOptionPane.showMessageDialog(null, "Error: file does not contain JAMSS options tag.", "Error", JOptionPane.ERROR_MESSAGE);
		textOptionsFilename.setText("");
		return;
	}
	} catch (Exception e){
		e.printStackTrace();
		JOptionPane.showMessageDialog(null, "Error: error reading mzML options from supplied file.", "Error", JOptionPane.ERROR_MESSAGE);
		textOptionsFilename.setText("");
	}
}//GEN-LAST:event_buttonOptionsOpenMouseClicked

private void buttonFastaOpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonFastaOpenMouseClicked
	int returnVal = openFastaFileChooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = openFastaFileChooser.getSelectedFile();
         textFastaFilename.setText(file.getAbsolutePath());
    }
}//GEN-LAST:event_buttonFastaOpenMouseClicked

private void resetDefaults(){
	textOptionsFilename.setText("none");
	textFastaFilename.setText("none");
	textOutputFile.setText("output");
	textTruthOutputFile.setText("truth");
	checkboxCarbamidomethylationGain.setSelected(false);
	spinnerPyroglutamateLossPercent.setValue(0);
	spinnerPhosphorylationGainPercent.setValue(0);
	spinnerOxidationMethioninePercent.setValue(0);
	comboDigester.setSelectedItem("trypsin");
	textSamplingRate.setText("1");
	textRuntime.setText("1000");
	sliderCleavages.setValue(0);
	sliderMS2PerScan.setValue(0);
	checkBoxOneD.setSelected(false);
	textPH.setText("2.6");
	textDropout.setText("1");
	textWhiteNoise.setText("10");
	textMaxNoise.setText("1000");
	textMinNoise.setText("50");
	textChromOverlapRange.setText("0.002");
	cloneCheckBox.setSelected(false);
}

private void buttonRestoreDefaultsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonRestoreDefaultsMouseClicked
    resetDefaults();
}//GEN-LAST:event_buttonRestoreDefaultsMouseClicked

private void buttonRunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonRunMouseClicked
	simulatorGUI.this.setVisible(false);
	
	// set modifications
	Modifications.CarbamidomethylationGain = checkboxCarbamidomethylationGain.isSelected();
	Modifications.spinnerOxidationMethioninePercent = (int) spinnerOxidationMethioninePercent.getValue();
	Modifications.spinnerPhosphorylationGainPercent = (int) spinnerPhosphorylationGainPercent.getValue();
	Modifications.spinnerPyroglutamateLossPercent = (int) spinnerPyroglutamateLossPercent.getValue();
	
	
	// set parameters
	MassSpec.oneD = checkBoxOneD.isSelected();
	MassSpec.runTime = Integer.parseInt(textRuntime.getText());
	MassSpec.samplingRate = Double.parseDouble(textSamplingRate.getText());
	MassSpec.dropoutRate = Double.parseDouble(textDropout.getText()) / 100;
	MassSpec.mergeThreshold = Double.parseDouble(textChromOverlapRange.getText());
	MassSpec.highestNMS2 = sliderMS2PerScan.getValue();
	MassSpec.mergeThreshold = Double.parseDouble(textChromOverlapRange.getText());
	MassSpec.whiteNoiseCount = Integer.parseInt(textWhiteNoise.getText());
	MassSpec.minWhiteNoiseIntensity = Double.parseDouble(textMinNoise.getText());
	MassSpec.maxWhiteNoiseIntensity = Double.parseDouble(textMaxNoise.getText());
	MassSpec.truthFile = textTruthOutputFile.getText();
	MassSpec.numCpus = sliderNumCPUs.getValue();
	if (cloneCheckBox.isSelected()){ 
		if (cloneSeed != 0){
			RandomFactory.cloneSeed = cloneSeed;
		}
		else{
			JOptionPane.showMessageDialog(null, "Error: Clone option selected but options from previous mzML file have not been loaded.", "Error", JOptionPane.ERROR_MESSAGE);
			return;
		}
	}
		
	// set Ph
	Modifications.pH = Double.parseDouble(textPH.getText());

	// create string of simulator options to put in mzML file
	StringBuilder msOptions = new StringBuilder();
	msOptions.append(textOutputFile.getText() + ",");
	msOptions.append(textTruthOutputFile.getText() + ",");
	msOptions.append(checkboxCarbamidomethylationGain.isSelected() + ",");
	msOptions.append(spinnerPyroglutamateLossPercent.getValue() + ",");
	msOptions.append(spinnerPhosphorylationGainPercent.getValue() + ",");
	msOptions.append(spinnerOxidationMethioninePercent.getValue() + ",");
	msOptions.append(comboDigester.getSelectedIndex() + ",");
	msOptions.append(textSamplingRate.getText() + ",");
	msOptions.append(textRuntime.getText() + ",");
	msOptions.append(sliderCleavages.getValue() + ",");
	msOptions.append(sliderMS2PerScan.getValue() + ",");
	msOptions.append(checkBoxOneD.isSelected() + ",");
	msOptions.append(textPH.getText() + ",");
	msOptions.append(textDropout.getText() + ",");
	msOptions.append(textWhiteNoise.getText() + ",");
	msOptions.append(textMaxNoise.getText() + ",");
	msOptions.append(textMinNoise.getText() + ",");
	msOptions.append(textChromOverlapRange.getText() + ",");
	msOptions.append(cloneCheckBox.isSelected());
	MassSpec.simOptions = msOptions.toString();
	
	(new Thread() {	public void run() {
		long startTime = System.currentTimeMillis();
		// digest & modifications //
		 // open fasta file
		String fastaFile = textFastaFilename.getText();
		File file = new File(fastaFile);
		String digesterName = comboDigester.getSelectedItem().toString();
		Digester digester = DigesterOpts.getDigester(digesterName);
		
		progressMonitor = new ProgressMonitor(simulatorGUI.this, "Simulating...", "", 0, 100);

		digester.processFile(file, sliderCleavages.getValue(),"M5P.model","M5Rules.model");
		
		progressMonitor.close();
		JOptionPane.showMessageDialog(null, "Simulator successfully completed in " + (System.currentTimeMillis()-startTime)/60000.0 + " mins." , "Done", JOptionPane.PLAIN_MESSAGE);
		System.exit(1);
	}}).start();
}//GEN-LAST:event_buttonRunMouseClicked

    private void textChromOverlapRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textChromOverlapRangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textChromOverlapRangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(simulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(simulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(simulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(simulatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new simulatorGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonFastaOpen;
    private javax.swing.JButton buttonOptionsOpen;
    private javax.swing.JButton buttonRestoreDefaults;
    private javax.swing.JButton buttonRun;
    private javax.swing.JCheckBox checkBoxOneD;
    private javax.swing.JCheckBox checkboxCarbamidomethylationGain;
    private javax.swing.JCheckBox cloneCheckBox;
    private javax.swing.JComboBox comboDigester;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JFileChooser openFastaFileChooser;
    private javax.swing.JFileChooser openOptsFileChooser;
    private javax.swing.JSlider sliderCleavages;
    private javax.swing.JSlider sliderMS2PerScan;
    private javax.swing.JSlider sliderNumCPUs;
    private javax.swing.JSpinner spinnerOxidationMethioninePercent;
    private javax.swing.JSpinner spinnerPhosphorylationGainPercent;
    private javax.swing.JSpinner spinnerPyroglutamateLossPercent;
    private javax.swing.JTextField textChromOverlapRange;
    private javax.swing.JTextField textDropout;
    private javax.swing.JLabel textFastaFilename;
    private javax.swing.JTextField textMaxNoise;
    private javax.swing.JTextField textMinNoise;
    private javax.swing.JLabel textOptionsFilename;
    private javax.swing.JTextField textOutputFile;
    private javax.swing.JTextField textPH;
    private javax.swing.JTextField textRuntime;
    private javax.swing.JTextField textSamplingRate;
    private javax.swing.JTextField textTruthOutputFile;
    private javax.swing.JTextField textWhiteNoise;
    // End of variables declaration//GEN-END:variables
}
